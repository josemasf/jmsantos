<button
  class="theme-button dark:bg-slate-300 dark:rounded"
  aria-label="botÃ³n modo oscuro"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="16"
    height="16"
    viewBox="0 0 24 24"
    fill="#FCD53F"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="w-6 h-6 fill-yellow-400 dark-theme-icon"
  >
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg
    class="w-6 h-6 fill-current hidden light-theme-icon"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
    ><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    ></path>
  </svg>
</button>

<script>
  
</script>

<script is:inline>
  const setMode = () => {
    const buttons = document.querySelectorAll(".theme-button");
    const lightIco = document.querySelectorAll(".light-theme-icon");
    const darkIco = document.querySelectorAll(".dark-theme-icon");

    if (
      localStorage.theme === "dark" ||
      (!("theme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");

      lightIco.forEach((lightThemeIcon) =>
        lightThemeIcon.classList.add("hidden")
      );
      darkIco.forEach((darkThemeIcon) =>
        darkThemeIcon.classList.remove("hidden")
      );
    } else {
      document.documentElement.classList.remove("dark");

      lightIco.forEach((lightThemeIcon) =>
        lightThemeIcon.classList.remove("hidden")
      );
      darkIco.forEach((darkThemeIcon) => darkThemeIcon.classList.add("hidden"));
    }

    buttons.forEach(function (themeButton) {
      themeButton.addEventListener("click", () => {
        if (document.documentElement.classList.contains("dark")) {
          document.documentElement.classList.remove("dark");
          document.documentElement.classList.add("light");
          lightIco.forEach((lightThemeIcon) =>
            lightThemeIcon.classList.remove("hidden")
          );
          darkIco.forEach((darkThemeIcon) =>
            darkThemeIcon.classList.add("hidden")
          );
          localStorage.theme = "light";
        } else {
          document.documentElement.classList.remove("light");
          document.documentElement.classList.add("dark");
          lightIco.forEach((lightThemeIcon) =>
            lightThemeIcon.classList.add("hidden")
          );
          darkIco.forEach((darkThemeIcon) =>
            darkThemeIcon.classList.remove("hidden")
          );
          localStorage.theme = "dark";
        }
      });
    });
    
  }

  // Runs on initial navigation
  setMode()

  // Runs on view transitions navigation
  document.addEventListener('astro:after-swap', setMode)
</script>